// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220110101532_AddEmployee")]
    partial class AddEmployee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EmployeeRefId")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("EmployeeRefId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonNumber")
                        .HasColumnType("int");

                    b.Property<string>("TelNr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            JobTitle = "Manager",
                            Name = "Peter",
                            PersonNumber = 111,
                            TelNr = "07907821"
                        });
                });

            modelBuilder.Entity("DAL.Product", b =>
                {
                    b.Property<int>("Barcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ExpirationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InventoriedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("InventoriedDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Barcode");

                    b.HasIndex("InventoriedBy");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DepartmentProduct", b =>
                {
                    b.Property<string>("DepartmentsName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductsBarcode")
                        .HasColumnType("int");

                    b.HasKey("DepartmentsName", "ProductsBarcode");

                    b.HasIndex("ProductsBarcode");

                    b.ToTable("DepartmentProduct");
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.HasOne("DAL.Employee", "Employee")
                        .WithMany("Departments")
                        .HasForeignKey("EmployeeRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Product", b =>
                {
                    b.HasOne("DAL.Employee", "Employee")
                        .WithMany("Products")
                        .HasForeignKey("InventoriedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DepartmentProduct", b =>
                {
                    b.HasOne("DAL.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsBarcode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}

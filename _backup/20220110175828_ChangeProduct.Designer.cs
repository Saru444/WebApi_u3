// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220110175828_ChangeProduct")]
    partial class ChangeProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("DAL.Campaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CampaignId");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            CampaignId = 1,
                            Discount = 0.0,
                            Name = "No Campaign"
                        },
                        new
                        {
                            CampaignId = 2,
                            Discount = 0.050000000000000003,
                            Name = "Christmas Campaign"
                        },
                        new
                        {
                            CampaignId = 3,
                            Discount = 0.10000000000000001,
                            Name = "Winter Campaign"
                        },
                        new
                        {
                            CampaignId = 4,
                            Discount = 0.10000000000000001,
                            Name = "Party Campaign "
                        });
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EmployeeRefId")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("EmployeeRefId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Name = "Dairy products",
                            EmployeeRefId = 4
                        },
                        new
                        {
                            Name = "Fruit",
                            EmployeeRefId = 2
                        },
                        new
                        {
                            Name = "Pantry",
                            EmployeeRefId = 3
                        },
                        new
                        {
                            Name = "Drink",
                            EmployeeRefId = 5
                        },
                        new
                        {
                            Name = "Bread",
                            EmployeeRefId = 2
                        },
                        new
                        {
                            Name = "Meat products",
                            EmployeeRefId = 5
                        });
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonNumber")
                        .HasColumnType("int");

                    b.Property<string>("TelNr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            JobTitle = "Manager",
                            Name = "Peter",
                            PersonNumber = 111,
                            TelNr = "07907821"
                        },
                        new
                        {
                            ID = 2,
                            JobTitle = "General staff",
                            Name = "Emma",
                            PersonNumber = 134,
                            TelNr = "07036271"
                        },
                        new
                        {
                            ID = 3,
                            JobTitle = "General staff",
                            Name = "Pelle",
                            PersonNumber = 126,
                            TelNr = "07807866"
                        },
                        new
                        {
                            ID = 4,
                            JobTitle = "General staff",
                            Name = "Maria",
                            PersonNumber = 154,
                            TelNr = "07007865"
                        },
                        new
                        {
                            ID = 5,
                            JobTitle = "General staff",
                            Name = "Eric",
                            PersonNumber = 144,
                            TelNr = "07907943"
                        });
                });

            modelBuilder.Entity("DAL.Product", b =>
                {
                    b.Property<int>("Barcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CampaignCode")
                        .HasColumnType("int");

                    b.Property<string>("ExpirationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InventoriedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("InventoriedDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Barcode");

                    b.HasIndex("CampaignCode");

                    b.HasIndex("InventoriedBy");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Barcode = 1010,
                            CampaignCode = 1,
                            ExpirationDate = "2022-01-20",
                            InventoriedBy = 4,
                            InventoriedDate = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Milk",
                            Quantity = 2,
                            UnitPrice = 13.25
                        },
                        new
                        {
                            Barcode = 1015,
                            CampaignCode = 1,
                            ExpirationDate = "2022-02-03",
                            InventoriedBy = 4,
                            InventoriedDate = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Butter",
                            Quantity = 3,
                            UnitPrice = 41.329999999999998
                        },
                        new
                        {
                            Barcode = 1018,
                            CampaignCode = 3,
                            ExpirationDate = "2022-02-05",
                            InventoriedBy = 4,
                            InventoriedDate = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cheese",
                            Quantity = 10,
                            UnitPrice = 89.900000000000006
                        },
                        new
                        {
                            Barcode = 1023,
                            CampaignCode = 3,
                            InventoriedBy = 2,
                            InventoriedDate = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple",
                            Quantity = 12,
                            UnitPrice = 6.5
                        },
                        new
                        {
                            Barcode = 1025,
                            CampaignCode = 1,
                            InventoriedBy = 2,
                            InventoriedDate = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pear",
                            Quantity = 15,
                            UnitPrice = 4.5
                        },
                        new
                        {
                            Barcode = 1026,
                            CampaignCode = 1,
                            InventoriedBy = 2,
                            InventoriedDate = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Orange",
                            Quantity = 20,
                            UnitPrice = 7.3499999999999996
                        },
                        new
                        {
                            Barcode = 1032,
                            CampaignCode = 2,
                            ExpirationDate = "2022-05-06",
                            InventoriedBy = 3,
                            InventoriedDate = new DateTime(2021, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Flour",
                            Quantity = 8,
                            UnitPrice = 18.850000000000001
                        },
                        new
                        {
                            Barcode = 1035,
                            CampaignCode = 1,
                            InventoriedBy = 3,
                            InventoriedDate = new DateTime(2021, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sugar",
                            Quantity = 5,
                            UnitPrice = 11.550000000000001
                        },
                        new
                        {
                            Barcode = 1038,
                            CampaignCode = 1,
                            ExpirationDate = "2022-12-20",
                            InventoriedBy = 3,
                            InventoriedDate = new DateTime(2021, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fruit tea",
                            Quantity = 11,
                            UnitPrice = 28.949999999999999
                        },
                        new
                        {
                            Barcode = 1044,
                            CampaignCode = 4,
                            ExpirationDate = "2023-02-02",
                            InventoriedBy = 5,
                            InventoriedDate = new DateTime(2021, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cola",
                            Quantity = 25,
                            UnitPrice = 14.5
                        },
                        new
                        {
                            Barcode = 1048,
                            CampaignCode = 4,
                            ExpirationDate = "2023-01-02",
                            InventoriedBy = 5,
                            InventoriedDate = new DateTime(2021, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Red bull",
                            Quantity = 6,
                            UnitPrice = 18.5
                        },
                        new
                        {
                            Barcode = 1046,
                            CampaignCode = 1,
                            ExpirationDate = "2023-02-02",
                            InventoriedBy = 5,
                            InventoriedDate = new DateTime(2021, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fanta",
                            Quantity = 8,
                            UnitPrice = 14.5
                        },
                        new
                        {
                            Barcode = 1055,
                            CampaignCode = 1,
                            ExpirationDate = "2022-01-20",
                            InventoriedBy = 4,
                            InventoriedDate = new DateTime(2022, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Toast",
                            Quantity = 5,
                            UnitPrice = 25.68
                        },
                        new
                        {
                            Barcode = 1057,
                            CampaignCode = 1,
                            ExpirationDate = "2022-01-15",
                            InventoriedBy = 4,
                            InventoriedDate = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Baguette",
                            Quantity = 9,
                            UnitPrice = 18.899999999999999
                        },
                        new
                        {
                            Barcode = 1062,
                            CampaignCode = 1,
                            ExpirationDate = "2022-01-14",
                            InventoriedBy = 4,
                            InventoriedDate = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Croissant",
                            Quantity = 6,
                            UnitPrice = 10.0
                        },
                        new
                        {
                            Barcode = 1068,
                            CampaignCode = 2,
                            ExpirationDate = "2022-01-04",
                            InventoriedBy = 2,
                            InventoriedDate = new DateTime(2021, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Beef",
                            Quantity = 12,
                            UnitPrice = 396.89999999999998
                        },
                        new
                        {
                            Barcode = 1073,
                            CampaignCode = 1,
                            ExpirationDate = "2022-01-05",
                            InventoriedBy = 2,
                            InventoriedDate = new DateTime(2021, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pork",
                            Quantity = 8,
                            UnitPrice = 76.879999999999995
                        },
                        new
                        {
                            Barcode = 1077,
                            CampaignCode = 2,
                            ExpirationDate = "2022-01-06",
                            InventoriedBy = 2,
                            InventoriedDate = new DateTime(2021, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chicken",
                            Quantity = 7,
                            UnitPrice = 55.5
                        });
                });

            modelBuilder.Entity("DepartmentProduct", b =>
                {
                    b.Property<string>("DepartmentsName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductsBarcode")
                        .HasColumnType("int");

                    b.HasKey("DepartmentsName", "ProductsBarcode");

                    b.HasIndex("ProductsBarcode");

                    b.ToTable("DepartmentProduct");
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.HasOne("DAL.Employee", "Employee")
                        .WithMany("Departments")
                        .HasForeignKey("EmployeeRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Product", b =>
                {
                    b.HasOne("DAL.Campaign", "Campaign")
                        .WithMany("Products")
                        .HasForeignKey("CampaignCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Employee", "Employee")
                        .WithMany("Products")
                        .HasForeignKey("InventoriedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DepartmentProduct", b =>
                {
                    b.HasOne("DAL.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsBarcode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Campaign", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
